@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:wght@300;400;500;700&display=swap');

html {
  font-size: 14px;
}

body {
  font-family: 'Noto Sans', sans-serif;
}

a {
  text-decoration: none;
}


.carousel-item img {
  object-fit: cover;
  object-position: top;
  height: 60vh;
  overflow: hidden;
}

.old_price {
  font-weight: bold;
  color: red;
}

.new_price {
  font-weight: bold;
  background-color: green;
  color: white;
  padding: 2px;
  border-radius: 5px;
  margin-bottom: 2px;
}

.pic-box {
  position: relative;
}

.hot {
  background-color: orangered;
  color: white;
  width: 50px;
  text-align: center;
  font-weight: bold;
  display: inline;
  border-radius: 5px;
  padding: 5px;
  position: absolute;
  top: 0;
  right: 20px;
  z-index: 10;
}

.cart-item-container,
.payment-summary {
  border: 1px solid rgb(222, 222, 222);
  border-radius: 4px;
  padding: 18px;
}

.cart-item-container {
  margin-bottom: 12px;
}

.payment-summary {
  padding-bottom: 5px;
}

@media (max-width: 1000px) {
  .payment-summary {
    /* grid-row: 1 means this element will be placed into row
      1 in the grid. (Normally, the row that an element is
      placed in is determined by the order of the elements in
      the HTML. grid-row overrides this default ordering). */
    grid-row: 1;
    margin-bottom: 12px;
  }
}

.delivery-date {
  color: rgb(0, 118, 0);
  font-weight: 700;
  font-size: 19px;
  margin-top: 5px;
  margin-bottom: 22px;
}

.cart-item-details-grid {
  display: grid;
  /* 100px 1fr 1fr; means the 2nd and 3rd column will
     take up half the remaining space in the grid
     (they will divide up the remaining space evenly). */
  grid-template-columns: 100px 1fr 1fr;
  column-gap: 25px;
}

@media (max-width: 1000px) {
  .cart-item-details-grid {
    grid-template-columns: 100px 1fr;
    row-gap: 30px;
  }
}

.product-image {
  max-width: 100%;
  max-height: 120px;

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.product-name {
  font-weight: 700;
  margin-bottom: 8px;
}

.product-price {
  color: rgb(177, 39, 4);
  font-weight: 700;
  margin-bottom: 5px;
}

.product-quantity .link-primary {
  margin-left: 3px;
}

@media (max-width: 1000px) {
  .delivery-options {
    /* grid-column: 1 means this element will be placed
       in column 1 in the grid. (Normally, the column that
       an element is placed in is determined by the order
       of the elements in the HTML. grid-column overrides
       this default ordering).
       
       / span 2 means this element will take up 2 columns
       in the grid (Normally, each element takes up 1
       column in the grid). */
    grid-column: 1 / span 2;
  }
}

.delivery-options-title {
  font-weight: 700;
  margin-bottom: 10px;
}

.delivery-option {
  display: grid;
  grid-template-columns: 24px 1fr;
  margin-bottom: 12px;
  cursor: pointer;
}

.delivery-option-input {
  margin-left: 0px;
  cursor: pointer;
}

.delivery-option-date {
  color: rgb(0, 118, 0);
  font-weight: 500;
  margin-bottom: 3px;
}

.delivery-option-price {
  color: rgb(120, 120, 120);
  font-size: 15px;
}

.payment-summary-title {
  font-weight: 700;
  font-size: 18px;
  margin-bottom: 12px;
}

.payment-summary-row {
  display: grid;
  /* 1fr auto; means the width of the 2nd column will be
     determined by the elements inside the column (auto).
     The 1st column will take up the remaining space. */
  grid-template-columns: 1fr auto;

  font-size: 15px;
  margin-bottom: 9px;
}

.payment-summary-money {
  text-align: right;
}

.subtotal-row .payment-summary-money {
  border-top: 1px solid rgb(222, 222, 222);
}

.subtotal-row div {
  padding-top: 9px;
}

.total-row {
  color: rgb(177, 39, 4);
  font-weight: 700;
  font-size: 18px;

  border-top: 1px solid rgb(222, 222, 222);
  padding-top: 18px;
}

.place-order-button {
  width: 100%;
  padding-top: 12px;
  padding-bottom: 12px;
  border-radius: 8px;

  margin-top: 11px;
  margin-bottom: 15px;
}

.main {
  max-width: 850px;
  margin-top: 90px;
  margin-bottom: 100px;
  padding-left: 20px;
  padding-right: 20px;

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.page-title {
  font-weight: 700;
  font-size: 26px;
  margin-bottom: 25px;
}

.orders-grid {
  display: grid;
  grid-template-columns: 1fr;
  row-gap: 50px;
}

.order-header {
  background-color: rgb(240, 242, 242);
  border: 1px solid rgb(213, 217, 217);

  display: flex;
  align-items: center;
  justify-content: space-between;

  padding: 20px 25px;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}

.order-header-left-section {
  display: flex;
  flex-shrink: 0;
}

.order-header-label {
  font-weight: 500;
}

.order-date,
.order-total {
  margin-right: 45px;
}

.order-header-right-section {
  flex-shrink: 1;
}

@media (max-width: 575px) {
  .order-header {
    flex-direction: column;
    align-items: start;
    line-height: 23px;
    padding: 15px;
  }

  .order-header-left-section {
    flex-direction: column;
  }

  .order-header-label {
    margin-right: 5px;
  }

  .order-date,
  .order-total {
    display: grid;
    grid-template-columns: auto 1fr;
    margin-right: 0;
  }

  .order-header-right-section {
    display: grid;
    grid-template-columns: auto 1fr;
  }
}

.order-details-grid {
  padding: 40px 25px;
  border: 1px solid rgb(213, 217, 217);
  border-top: none;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;

  display: grid;
  grid-template-columns: 110px 1fr 220px;
  column-gap: 35px;
  row-gap: 60px;
  align-items: center;
}

@media (max-width: 800px) {
  .order-details-grid {
    grid-template-columns: 110px 1fr;
    row-gap: 0;
    padding-bottom: 8px;
  }
}

@media (max-width: 450px) {
  .order-details-grid {
    grid-template-columns: 1fr;
  }
}

.product-image-container {
  text-align: center;
}

.product-image-container img {
  max-width: 110px;
  max-height: 110px;
}

.product-name {
  font-weight: 700;
  margin-bottom: 5px;
}

.product-delivery-date {
  margin-bottom: 3px;
}

.product-quantity {
  margin-bottom: 8px;
}

.buy-again-button {
  font-size: 15px;
  width: 140px;
  height: 36px;
  border-radius: 8px;

  display: flex;
  align-items: center;
  justify-content: center;
}

.buy-again-icon {
  width: 25px;
  margin-right: 15px;
}

.product-actions {
  align-self: start;
}

.track-package-button {
  width: 100%;
  font-size: 15px;
  padding: 8px;
}

@media (max-width: 800px) {
  .buy-again-button {
    margin-bottom: 10px;
  }

  .product-actions {
    /* grid-column: 2 means this element will be placed
       in column 2 in the grid. (Normally, the column that
       an element is placed in is determined by the order
       of the elements in the HTML. grid-column overrides
       this default ordering). */
    grid-column: 2;
    margin-bottom: 30px;
  }

  .track-package-button {
    width: 140px;
  }
}

@media (max-width: 450px) {
  .product-image-container {
    text-align: center;
    margin-bottom: 25px;
  }

  .product-image-container img {
    max-width: 150px;
    max-height: 150px;
  }

  .product-name {
    margin-bottom: 10px;
  }

  .product-quantity {
    margin-bottom: 15px;
  }

  .buy-again-button {
    width: 100%;
    margin-bottom: 15px;
  }

  .product-actions {
    /* grid-column: auto; undos grid-column: 2; from above.
       This element will now be placed in its normal column
       in the grid. */
    grid-column: auto;
    margin-bottom: 70px;
  }

  .track-package-button {
    width: 100%;
    padding: 12px;
  }
}

.main {
  max-width: 850px;
  margin-top: 90px;
  margin-bottom: 100px;
  padding-left: 30px;
  padding-right: 30px;

  /* margin-left: auto;
     margin-right auto;
     Is a trick for centering an element horizontally
     without needing a container. */
  margin-left: auto;
  margin-right: auto;
}

.back-to-orders-link {
  display: inline-block;
  margin-bottom: 30px;
}

.delivery-date {
  font-size: 25px;
  font-weight: 700;
  margin-bottom: 10px;
}

.product-info {
  margin-bottom: 3px;
}

.product-image {
  max-width: 150px;
  max-height: 150px;
  margin-top: 25px;
  margin-bottom: 50px;
}

.progress-labels-container {
  display: flex;
  justify-content: space-between;
  font-size: 20px;
  font-weight: 500;
  margin-bottom: 15px;
}

.current-status {
  color: rgb(6, 125, 98);
}

@media (max-width: 575px) {
  .progress-labels-container {
    font-size: 16px;
  }
}

@media (max-width: 450px) {
  .progress-labels-container {
    flex-direction: column;
    margin-bottom: 5px;
  }

  .progress-label {
    margin-bottom: 3px;
  }
}

.progress-bar-container {
  height: 25px;
  width: 100%;

  border: 1px solid rgb(200, 200, 200);
  border-radius: 50px;
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  background-color: green;
  border-radius: 50px;
  width: 50%;
}

.pic-box {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 5px;
}

.pic-box img {
    max-height: 100%;
    max-width: 100%;
}

.card-img-container {
    background: #f8f9fa; 
    padding: 10px;
}

.card {
    transition: transform 0.2s;
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
}

a:hover {
    text-decoration: none;
}
